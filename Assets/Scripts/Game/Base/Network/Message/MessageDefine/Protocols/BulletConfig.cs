// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bullet_config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace BulletConfig {

  /// <summary>Holder for reflection information generated from bullet_config.proto</summary>
  public static partial class BulletConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for bullet_config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BulletConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNidWxsZXRfY29uZmlnLnByb3RvEg1idWxsZXRfY29uZmlnGhVza2lsbG5l",
            "d19jb25maWcucHJvdG8inAcKC2J1bGxldF9kYXRhEg8KAklkGAEgASgNSACI",
            "AQESEQoETmFtZRgCIAEoCUgBiAEBEjMKB0RpclR5cGUYAyABKA4yHS5idWxs",
            "ZXRfY29uZmlnLkVCdWxsZXREaXJUeXBlSAKIAQESFQoIRWZmZWN0SWQYBCAB",
            "KA1IA4gBARIdChBFbmRXaXRoQ29sbGlzaW9uGAUgASgISASIAQESGAoLRW5k",
            "RWZmZWN0SWQYBiABKA1IBYgBARIdChBCdWxsZXRSYW5nZVZhbHVlGAcgASgF",
            "SAaIAQESHgoRQnVsbGV0UmVkaXVzVmFsdWUYCCABKAVIB4gBARIdChBCdWxs",
            "ZXRTcGVlZFZhbHVlGAkgASgFSAiIAQESHgoRU3BlY2lhbEJ1bGxldFRpbWUY",
            "CiABKAVICYgBARIYCgtTdXBlckF0dGFjaxgLIAEoBUgKiAEBEhcKCk91dHB1",
            "dFJhdGUYDCABKAVIC4gBARIXCgpBdXRvVGFyZ2V0GA0gASgISAyIAQESFQoI",
            "RGlyU3BlZWQYDiABKAVIDYgBARIXCgpMb2NrVGFyZ2V0GA8gASgISA6IAQES",
            "FAoHT25GbG9vchgQIAEoCEgPiAEBEhEKBElzM0QYESABKAhIEIgBARIYCgtW",
            "ZXJ0aWNhbEFjYxgSIAEoBUgRiAEBEhoKDUhvcml6b250YWxBY2MYEyABKAVI",
            "EogBARIdChBGb3JjZUxvb2tGb3J3YXJkGBQgASgISBOIAQESMgoNQnVsbGV0",
            "T3V0cHV0cxgVIAMoCzIbLnNraWxsbmV3X2NvbmZpZy5PdXRwdXRJdGVtQgUK",
            "A19JZEIHCgVfTmFtZUIKCghfRGlyVHlwZUILCglfRWZmZWN0SWRCEwoRX0Vu",
            "ZFdpdGhDb2xsaXNpb25CDgoMX0VuZEVmZmVjdElkQhMKEV9CdWxsZXRSYW5n",
            "ZVZhbHVlQhQKEl9CdWxsZXRSZWRpdXNWYWx1ZUITChFfQnVsbGV0U3BlZWRW",
            "YWx1ZUIUChJfU3BlY2lhbEJ1bGxldFRpbWVCDgoMX1N1cGVyQXR0YWNrQg0K",
            "C19PdXRwdXRSYXRlQg0KC19BdXRvVGFyZ2V0QgsKCV9EaXJTcGVlZEINCgtf",
            "TG9ja1RhcmdldEIKCghfT25GbG9vckIHCgVfSXMzREIOCgxfVmVydGljYWxB",
            "Y2NCEAoOX0hvcml6b250YWxBY2NCEwoRX0ZvcmNlTG9va0ZvcndhcmQiyQEK",
            "CWNvbnRhaW5lchIRCgRuYW1lGAEgASgJSACIAQESFQoIYnVpbGRfaWQYAiAB",
            "KAVIAYgBARIyCgVpbmZvcxgDIAMoCzIjLmJ1bGxldF9jb25maWcuY29udGFp",
            "bmVyLkluZm9zRW50cnkaSAoKSW5mb3NFbnRyeRILCgNrZXkYASABKAUSKQoF",
            "dmFsdWUYAiABKAsyGi5idWxsZXRfY29uZmlnLmJ1bGxldF9kYXRhOgI4AUIH",
            "CgVfbmFtZUILCglfYnVpbGRfaWQqOQoORUJ1bGxldERpclR5cGUSCwoHRGVm",
            "YXVsdBAAEgsKB0xvb2tEaXIQARINCglUYXJnZXREaXIQAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SkillnewConfig.SkillnewConfigReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::BulletConfig.EBulletDirType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::BulletConfig.bullet_data), global::BulletConfig.bullet_data.Parser, new[]{ "Id", "Name", "DirType", "EffectId", "EndWithCollision", "EndEffectId", "BulletRangeValue", "BulletRediusValue", "BulletSpeedValue", "SpecialBulletTime", "SuperAttack", "OutputRate", "AutoTarget", "DirSpeed", "LockTarget", "OnFloor", "Is3D", "VerticalAcc", "HorizontalAcc", "ForceLookForward", "BulletOutputs" }, new[]{ "Id", "Name", "DirType", "EffectId", "EndWithCollision", "EndEffectId", "BulletRangeValue", "BulletRediusValue", "BulletSpeedValue", "SpecialBulletTime", "SuperAttack", "OutputRate", "AutoTarget", "DirSpeed", "LockTarget", "OnFloor", "Is3D", "VerticalAcc", "HorizontalAcc", "ForceLookForward" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BulletConfig.container), global::BulletConfig.container.Parser, new[]{ "Name", "BuildId", "Infos" }, new[]{ "Name", "BuildId" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Enums
  public enum EBulletDirType {
    /// <summary>
    ///默认角色正前方
    /// </summary>
    [pbr::OriginalName("Default")] Default = 0,
    /// <summary>
    ///锁定标志锁定方向
    /// </summary>
    [pbr::OriginalName("LookDir")] LookDir = 1,
    /// <summary>
    ///当亲目标所在方向
    /// </summary>
    [pbr::OriginalName("TargetDir")] TargetDir = 2,
  }

  #endregion

  #region Messages
  public sealed partial class bullet_data : pb::IMessage<bullet_data>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<bullet_data> _parser = new pb::MessageParser<bullet_data>(() => new bullet_data());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<bullet_data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BulletConfig.BulletConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bullet_data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bullet_data(bullet_data other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      name_ = other.name_;
      dirType_ = other.dirType_;
      effectId_ = other.effectId_;
      endWithCollision_ = other.endWithCollision_;
      endEffectId_ = other.endEffectId_;
      bulletRangeValue_ = other.bulletRangeValue_;
      bulletRediusValue_ = other.bulletRediusValue_;
      bulletSpeedValue_ = other.bulletSpeedValue_;
      specialBulletTime_ = other.specialBulletTime_;
      superAttack_ = other.superAttack_;
      outputRate_ = other.outputRate_;
      autoTarget_ = other.autoTarget_;
      dirSpeed_ = other.dirSpeed_;
      lockTarget_ = other.lockTarget_;
      onFloor_ = other.onFloor_;
      is3D_ = other.is3D_;
      verticalAcc_ = other.verticalAcc_;
      horizontalAcc_ = other.horizontalAcc_;
      forceLookForward_ = other.forceLookForward_;
      bulletOutputs_ = other.bulletOutputs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bullet_data Clone() {
      return new bullet_data(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "Id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "Id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_;
    /// <summary>
    ///子弹名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "Name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "Name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "DirType" field.</summary>
    public const int DirTypeFieldNumber = 3;
    private global::BulletConfig.EBulletDirType dirType_;
    /// <summary>
    ///方向类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::BulletConfig.EBulletDirType DirType {
      get { if ((_hasBits0 & 2) != 0) { return dirType_; } else { return global::BulletConfig.EBulletDirType.Default; } }
      set {
        _hasBits0 |= 2;
        dirType_ = value;
      }
    }
    /// <summary>Gets whether the "DirType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDirType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "DirType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDirType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "EffectId" field.</summary>
    public const int EffectIdFieldNumber = 4;
    private uint effectId_;
    /// <summary>
    ///子弹特效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectId {
      get { if ((_hasBits0 & 4) != 0) { return effectId_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        effectId_ = value;
      }
    }
    /// <summary>Gets whether the "EffectId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEffectId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "EffectId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEffectId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "EndWithCollision" field.</summary>
    public const int EndWithCollisionFieldNumber = 5;
    private bool endWithCollision_;
    /// <summary>
    ///是否遇到碰撞结束
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EndWithCollision {
      get { if ((_hasBits0 & 8) != 0) { return endWithCollision_; } else { return false; } }
      set {
        _hasBits0 |= 8;
        endWithCollision_ = value;
      }
    }
    /// <summary>Gets whether the "EndWithCollision" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndWithCollision {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "EndWithCollision" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndWithCollision() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "EndEffectId" field.</summary>
    public const int EndEffectIdFieldNumber = 6;
    private uint endEffectId_;
    /// <summary>
    ///子弹结束特效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EndEffectId {
      get { if ((_hasBits0 & 16) != 0) { return endEffectId_; } else { return 0; } }
      set {
        _hasBits0 |= 16;
        endEffectId_ = value;
      }
    }
    /// <summary>Gets whether the "EndEffectId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndEffectId {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "EndEffectId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndEffectId() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "BulletRangeValue" field.</summary>
    public const int BulletRangeValueFieldNumber = 7;
    private int bulletRangeValue_;
    /// <summary>
    ///飞行范围
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BulletRangeValue {
      get { if ((_hasBits0 & 32) != 0) { return bulletRangeValue_; } else { return 0; } }
      set {
        _hasBits0 |= 32;
        bulletRangeValue_ = value;
      }
    }
    /// <summary>Gets whether the "BulletRangeValue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBulletRangeValue {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "BulletRangeValue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBulletRangeValue() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "BulletRediusValue" field.</summary>
    public const int BulletRediusValueFieldNumber = 8;
    private int bulletRediusValue_;
    /// <summary>
    ///伤害半径
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BulletRediusValue {
      get { if ((_hasBits0 & 64) != 0) { return bulletRediusValue_; } else { return 0; } }
      set {
        _hasBits0 |= 64;
        bulletRediusValue_ = value;
      }
    }
    /// <summary>Gets whether the "BulletRediusValue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBulletRediusValue {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "BulletRediusValue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBulletRediusValue() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "BulletSpeedValue" field.</summary>
    public const int BulletSpeedValueFieldNumber = 9;
    private int bulletSpeedValue_;
    /// <summary>
    ///水平初速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BulletSpeedValue {
      get { if ((_hasBits0 & 128) != 0) { return bulletSpeedValue_; } else { return 0; } }
      set {
        _hasBits0 |= 128;
        bulletSpeedValue_ = value;
      }
    }
    /// <summary>Gets whether the "BulletSpeedValue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBulletSpeedValue {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "BulletSpeedValue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBulletSpeedValue() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "SpecialBulletTime" field.</summary>
    public const int SpecialBulletTimeFieldNumber = 10;
    private int specialBulletTime_;
    /// <summary>
    ///特殊子弹
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpecialBulletTime {
      get { if ((_hasBits0 & 256) != 0) { return specialBulletTime_; } else { return 0; } }
      set {
        _hasBits0 |= 256;
        specialBulletTime_ = value;
      }
    }
    /// <summary>Gets whether the "SpecialBulletTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpecialBulletTime {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "SpecialBulletTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpecialBulletTime() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "SuperAttack" field.</summary>
    public const int SuperAttackFieldNumber = 11;
    private int superAttack_;
    /// <summary>
    ///超级盔甲攻击值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperAttack {
      get { if ((_hasBits0 & 512) != 0) { return superAttack_; } else { return 0; } }
      set {
        _hasBits0 |= 512;
        superAttack_ = value;
      }
    }
    /// <summary>Gets whether the "SuperAttack" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperAttack {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "SuperAttack" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperAttack() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "OutputRate" field.</summary>
    public const int OutputRateFieldNumber = 12;
    private int outputRate_;
    /// <summary>
    ///输出间隔
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OutputRate {
      get { if ((_hasBits0 & 1024) != 0) { return outputRate_; } else { return 0; } }
      set {
        _hasBits0 |= 1024;
        outputRate_ = value;
      }
    }
    /// <summary>Gets whether the "OutputRate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOutputRate {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "OutputRate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutputRate() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "AutoTarget" field.</summary>
    public const int AutoTargetFieldNumber = 13;
    private bool autoTarget_;
    /// <summary>
    ///自动选择目标，勾选情况下会锁定目标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AutoTarget {
      get { if ((_hasBits0 & 2048) != 0) { return autoTarget_; } else { return false; } }
      set {
        _hasBits0 |= 2048;
        autoTarget_ = value;
      }
    }
    /// <summary>Gets whether the "AutoTarget" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAutoTarget {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "AutoTarget" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAutoTarget() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "DirSpeed" field.</summary>
    public const int DirSpeedFieldNumber = 14;
    private int dirSpeed_;
    /// <summary>
    ///方向灵敏度100度,表示1度每帧,锁定目标时需要配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DirSpeed {
      get { if ((_hasBits0 & 4096) != 0) { return dirSpeed_; } else { return 0; } }
      set {
        _hasBits0 |= 4096;
        dirSpeed_ = value;
      }
    }
    /// <summary>Gets whether the "DirSpeed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDirSpeed {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "DirSpeed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDirSpeed() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "LockTarget" field.</summary>
    public const int LockTargetFieldNumber = 15;
    private bool lockTarget_;
    /// <summary>
    ///锁定目标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LockTarget {
      get { if ((_hasBits0 & 8192) != 0) { return lockTarget_; } else { return false; } }
      set {
        _hasBits0 |= 8192;
        lockTarget_ = value;
      }
    }
    /// <summary>Gets whether the "LockTarget" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLockTarget {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "LockTarget" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLockTarget() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "OnFloor" field.</summary>
    public const int OnFloorFieldNumber = 16;
    private bool onFloor_;
    /// <summary>
    ///贴着地表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OnFloor {
      get { if ((_hasBits0 & 16384) != 0) { return onFloor_; } else { return false; } }
      set {
        _hasBits0 |= 16384;
        onFloor_ = value;
      }
    }
    /// <summary>Gets whether the "OnFloor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOnFloor {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "OnFloor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOnFloor() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "Is3D" field.</summary>
    public const int Is3DFieldNumber = 17;
    private bool is3D_;
    /// <summary>
    ///是否落地结束，暂时没有处理
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Is3D {
      get { if ((_hasBits0 & 32768) != 0) { return is3D_; } else { return false; } }
      set {
        _hasBits0 |= 32768;
        is3D_ = value;
      }
    }
    /// <summary>Gets whether the "Is3D" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIs3D {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "Is3D" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIs3D() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "VerticalAcc" field.</summary>
    public const int VerticalAccFieldNumber = 18;
    private int verticalAcc_;
    /// <summary>
    ///垂直加速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int VerticalAcc {
      get { if ((_hasBits0 & 65536) != 0) { return verticalAcc_; } else { return 0; } }
      set {
        _hasBits0 |= 65536;
        verticalAcc_ = value;
      }
    }
    /// <summary>Gets whether the "VerticalAcc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVerticalAcc {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "VerticalAcc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVerticalAcc() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "HorizontalAcc" field.</summary>
    public const int HorizontalAccFieldNumber = 19;
    private int horizontalAcc_;
    /// <summary>
    ///水平加速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HorizontalAcc {
      get { if ((_hasBits0 & 131072) != 0) { return horizontalAcc_; } else { return 0; } }
      set {
        _hasBits0 |= 131072;
        horizontalAcc_ = value;
      }
    }
    /// <summary>Gets whether the "HorizontalAcc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHorizontalAcc {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "HorizontalAcc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHorizontalAcc() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "ForceLookForward" field.</summary>
    public const int ForceLookForwardFieldNumber = 20;
    private bool forceLookForward_;
    /// <summary>
    ///强制朝向运动方向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForceLookForward {
      get { if ((_hasBits0 & 262144) != 0) { return forceLookForward_; } else { return false; } }
      set {
        _hasBits0 |= 262144;
        forceLookForward_ = value;
      }
    }
    /// <summary>Gets whether the "ForceLookForward" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForceLookForward {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "ForceLookForward" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForceLookForward() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "BulletOutputs" field.</summary>
    public const int BulletOutputsFieldNumber = 21;
    private static readonly pb::FieldCodec<global::SkillnewConfig.OutputItem> _repeated_bulletOutputs_codec
        = pb::FieldCodec.ForMessage(170, global::SkillnewConfig.OutputItem.Parser);
    private readonly pbc::RepeatedField<global::SkillnewConfig.OutputItem> bulletOutputs_ = new pbc::RepeatedField<global::SkillnewConfig.OutputItem>();
    /// <summary>
    ///子弹输出
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SkillnewConfig.OutputItem> BulletOutputs {
      get { return bulletOutputs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as bullet_data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(bullet_data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (DirType != other.DirType) return false;
      if (EffectId != other.EffectId) return false;
      if (EndWithCollision != other.EndWithCollision) return false;
      if (EndEffectId != other.EndEffectId) return false;
      if (BulletRangeValue != other.BulletRangeValue) return false;
      if (BulletRediusValue != other.BulletRediusValue) return false;
      if (BulletSpeedValue != other.BulletSpeedValue) return false;
      if (SpecialBulletTime != other.SpecialBulletTime) return false;
      if (SuperAttack != other.SuperAttack) return false;
      if (OutputRate != other.OutputRate) return false;
      if (AutoTarget != other.AutoTarget) return false;
      if (DirSpeed != other.DirSpeed) return false;
      if (LockTarget != other.LockTarget) return false;
      if (OnFloor != other.OnFloor) return false;
      if (Is3D != other.Is3D) return false;
      if (VerticalAcc != other.VerticalAcc) return false;
      if (HorizontalAcc != other.HorizontalAcc) return false;
      if (ForceLookForward != other.ForceLookForward) return false;
      if(!bulletOutputs_.Equals(other.bulletOutputs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasDirType) hash ^= DirType.GetHashCode();
      if (HasEffectId) hash ^= EffectId.GetHashCode();
      if (HasEndWithCollision) hash ^= EndWithCollision.GetHashCode();
      if (HasEndEffectId) hash ^= EndEffectId.GetHashCode();
      if (HasBulletRangeValue) hash ^= BulletRangeValue.GetHashCode();
      if (HasBulletRediusValue) hash ^= BulletRediusValue.GetHashCode();
      if (HasBulletSpeedValue) hash ^= BulletSpeedValue.GetHashCode();
      if (HasSpecialBulletTime) hash ^= SpecialBulletTime.GetHashCode();
      if (HasSuperAttack) hash ^= SuperAttack.GetHashCode();
      if (HasOutputRate) hash ^= OutputRate.GetHashCode();
      if (HasAutoTarget) hash ^= AutoTarget.GetHashCode();
      if (HasDirSpeed) hash ^= DirSpeed.GetHashCode();
      if (HasLockTarget) hash ^= LockTarget.GetHashCode();
      if (HasOnFloor) hash ^= OnFloor.GetHashCode();
      if (HasIs3D) hash ^= Is3D.GetHashCode();
      if (HasVerticalAcc) hash ^= VerticalAcc.GetHashCode();
      if (HasHorizontalAcc) hash ^= HorizontalAcc.GetHashCode();
      if (HasForceLookForward) hash ^= ForceLookForward.GetHashCode();
      hash ^= bulletOutputs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasDirType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) DirType);
      }
      if (HasEffectId) {
        output.WriteRawTag(32);
        output.WriteUInt32(EffectId);
      }
      if (HasEndWithCollision) {
        output.WriteRawTag(40);
        output.WriteBool(EndWithCollision);
      }
      if (HasEndEffectId) {
        output.WriteRawTag(48);
        output.WriteUInt32(EndEffectId);
      }
      if (HasBulletRangeValue) {
        output.WriteRawTag(56);
        output.WriteInt32(BulletRangeValue);
      }
      if (HasBulletRediusValue) {
        output.WriteRawTag(64);
        output.WriteInt32(BulletRediusValue);
      }
      if (HasBulletSpeedValue) {
        output.WriteRawTag(72);
        output.WriteInt32(BulletSpeedValue);
      }
      if (HasSpecialBulletTime) {
        output.WriteRawTag(80);
        output.WriteInt32(SpecialBulletTime);
      }
      if (HasSuperAttack) {
        output.WriteRawTag(88);
        output.WriteInt32(SuperAttack);
      }
      if (HasOutputRate) {
        output.WriteRawTag(96);
        output.WriteInt32(OutputRate);
      }
      if (HasAutoTarget) {
        output.WriteRawTag(104);
        output.WriteBool(AutoTarget);
      }
      if (HasDirSpeed) {
        output.WriteRawTag(112);
        output.WriteInt32(DirSpeed);
      }
      if (HasLockTarget) {
        output.WriteRawTag(120);
        output.WriteBool(LockTarget);
      }
      if (HasOnFloor) {
        output.WriteRawTag(128, 1);
        output.WriteBool(OnFloor);
      }
      if (HasIs3D) {
        output.WriteRawTag(136, 1);
        output.WriteBool(Is3D);
      }
      if (HasVerticalAcc) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(VerticalAcc);
      }
      if (HasHorizontalAcc) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(HorizontalAcc);
      }
      if (HasForceLookForward) {
        output.WriteRawTag(160, 1);
        output.WriteBool(ForceLookForward);
      }
      bulletOutputs_.WriteTo(output, _repeated_bulletOutputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasDirType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) DirType);
      }
      if (HasEffectId) {
        output.WriteRawTag(32);
        output.WriteUInt32(EffectId);
      }
      if (HasEndWithCollision) {
        output.WriteRawTag(40);
        output.WriteBool(EndWithCollision);
      }
      if (HasEndEffectId) {
        output.WriteRawTag(48);
        output.WriteUInt32(EndEffectId);
      }
      if (HasBulletRangeValue) {
        output.WriteRawTag(56);
        output.WriteInt32(BulletRangeValue);
      }
      if (HasBulletRediusValue) {
        output.WriteRawTag(64);
        output.WriteInt32(BulletRediusValue);
      }
      if (HasBulletSpeedValue) {
        output.WriteRawTag(72);
        output.WriteInt32(BulletSpeedValue);
      }
      if (HasSpecialBulletTime) {
        output.WriteRawTag(80);
        output.WriteInt32(SpecialBulletTime);
      }
      if (HasSuperAttack) {
        output.WriteRawTag(88);
        output.WriteInt32(SuperAttack);
      }
      if (HasOutputRate) {
        output.WriteRawTag(96);
        output.WriteInt32(OutputRate);
      }
      if (HasAutoTarget) {
        output.WriteRawTag(104);
        output.WriteBool(AutoTarget);
      }
      if (HasDirSpeed) {
        output.WriteRawTag(112);
        output.WriteInt32(DirSpeed);
      }
      if (HasLockTarget) {
        output.WriteRawTag(120);
        output.WriteBool(LockTarget);
      }
      if (HasOnFloor) {
        output.WriteRawTag(128, 1);
        output.WriteBool(OnFloor);
      }
      if (HasIs3D) {
        output.WriteRawTag(136, 1);
        output.WriteBool(Is3D);
      }
      if (HasVerticalAcc) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(VerticalAcc);
      }
      if (HasHorizontalAcc) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(HorizontalAcc);
      }
      if (HasForceLookForward) {
        output.WriteRawTag(160, 1);
        output.WriteBool(ForceLookForward);
      }
      bulletOutputs_.WriteTo(ref output, _repeated_bulletOutputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasDirType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DirType);
      }
      if (HasEffectId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EffectId);
      }
      if (HasEndWithCollision) {
        size += 1 + 1;
      }
      if (HasEndEffectId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EndEffectId);
      }
      if (HasBulletRangeValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletRangeValue);
      }
      if (HasBulletRediusValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletRediusValue);
      }
      if (HasBulletSpeedValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletSpeedValue);
      }
      if (HasSpecialBulletTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpecialBulletTime);
      }
      if (HasSuperAttack) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperAttack);
      }
      if (HasOutputRate) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OutputRate);
      }
      if (HasAutoTarget) {
        size += 1 + 1;
      }
      if (HasDirSpeed) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DirSpeed);
      }
      if (HasLockTarget) {
        size += 1 + 1;
      }
      if (HasOnFloor) {
        size += 2 + 1;
      }
      if (HasIs3D) {
        size += 2 + 1;
      }
      if (HasVerticalAcc) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(VerticalAcc);
      }
      if (HasHorizontalAcc) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HorizontalAcc);
      }
      if (HasForceLookForward) {
        size += 2 + 1;
      }
      size += bulletOutputs_.CalculateSize(_repeated_bulletOutputs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(bullet_data other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasDirType) {
        DirType = other.DirType;
      }
      if (other.HasEffectId) {
        EffectId = other.EffectId;
      }
      if (other.HasEndWithCollision) {
        EndWithCollision = other.EndWithCollision;
      }
      if (other.HasEndEffectId) {
        EndEffectId = other.EndEffectId;
      }
      if (other.HasBulletRangeValue) {
        BulletRangeValue = other.BulletRangeValue;
      }
      if (other.HasBulletRediusValue) {
        BulletRediusValue = other.BulletRediusValue;
      }
      if (other.HasBulletSpeedValue) {
        BulletSpeedValue = other.BulletSpeedValue;
      }
      if (other.HasSpecialBulletTime) {
        SpecialBulletTime = other.SpecialBulletTime;
      }
      if (other.HasSuperAttack) {
        SuperAttack = other.SuperAttack;
      }
      if (other.HasOutputRate) {
        OutputRate = other.OutputRate;
      }
      if (other.HasAutoTarget) {
        AutoTarget = other.AutoTarget;
      }
      if (other.HasDirSpeed) {
        DirSpeed = other.DirSpeed;
      }
      if (other.HasLockTarget) {
        LockTarget = other.LockTarget;
      }
      if (other.HasOnFloor) {
        OnFloor = other.OnFloor;
      }
      if (other.HasIs3D) {
        Is3D = other.Is3D;
      }
      if (other.HasVerticalAcc) {
        VerticalAcc = other.VerticalAcc;
      }
      if (other.HasHorizontalAcc) {
        HorizontalAcc = other.HorizontalAcc;
      }
      if (other.HasForceLookForward) {
        ForceLookForward = other.ForceLookForward;
      }
      bulletOutputs_.Add(other.bulletOutputs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            DirType = (global::BulletConfig.EBulletDirType) input.ReadEnum();
            break;
          }
          case 32: {
            EffectId = input.ReadUInt32();
            break;
          }
          case 40: {
            EndWithCollision = input.ReadBool();
            break;
          }
          case 48: {
            EndEffectId = input.ReadUInt32();
            break;
          }
          case 56: {
            BulletRangeValue = input.ReadInt32();
            break;
          }
          case 64: {
            BulletRediusValue = input.ReadInt32();
            break;
          }
          case 72: {
            BulletSpeedValue = input.ReadInt32();
            break;
          }
          case 80: {
            SpecialBulletTime = input.ReadInt32();
            break;
          }
          case 88: {
            SuperAttack = input.ReadInt32();
            break;
          }
          case 96: {
            OutputRate = input.ReadInt32();
            break;
          }
          case 104: {
            AutoTarget = input.ReadBool();
            break;
          }
          case 112: {
            DirSpeed = input.ReadInt32();
            break;
          }
          case 120: {
            LockTarget = input.ReadBool();
            break;
          }
          case 128: {
            OnFloor = input.ReadBool();
            break;
          }
          case 136: {
            Is3D = input.ReadBool();
            break;
          }
          case 144: {
            VerticalAcc = input.ReadInt32();
            break;
          }
          case 152: {
            HorizontalAcc = input.ReadInt32();
            break;
          }
          case 160: {
            ForceLookForward = input.ReadBool();
            break;
          }
          case 170: {
            bulletOutputs_.AddEntriesFrom(input, _repeated_bulletOutputs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            DirType = (global::BulletConfig.EBulletDirType) input.ReadEnum();
            break;
          }
          case 32: {
            EffectId = input.ReadUInt32();
            break;
          }
          case 40: {
            EndWithCollision = input.ReadBool();
            break;
          }
          case 48: {
            EndEffectId = input.ReadUInt32();
            break;
          }
          case 56: {
            BulletRangeValue = input.ReadInt32();
            break;
          }
          case 64: {
            BulletRediusValue = input.ReadInt32();
            break;
          }
          case 72: {
            BulletSpeedValue = input.ReadInt32();
            break;
          }
          case 80: {
            SpecialBulletTime = input.ReadInt32();
            break;
          }
          case 88: {
            SuperAttack = input.ReadInt32();
            break;
          }
          case 96: {
            OutputRate = input.ReadInt32();
            break;
          }
          case 104: {
            AutoTarget = input.ReadBool();
            break;
          }
          case 112: {
            DirSpeed = input.ReadInt32();
            break;
          }
          case 120: {
            LockTarget = input.ReadBool();
            break;
          }
          case 128: {
            OnFloor = input.ReadBool();
            break;
          }
          case 136: {
            Is3D = input.ReadBool();
            break;
          }
          case 144: {
            VerticalAcc = input.ReadInt32();
            break;
          }
          case 152: {
            HorizontalAcc = input.ReadInt32();
            break;
          }
          case 160: {
            ForceLookForward = input.ReadBool();
            break;
          }
          case 170: {
            bulletOutputs_.AddEntriesFrom(ref input, _repeated_bulletOutputs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class container : pb::IMessage<container>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<container> _parser = new pb::MessageParser<container>(() => new container());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<container> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BulletConfig.BulletConfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public container() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public container(container other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      buildId_ = other.buildId_;
      infos_ = other.infos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public container Clone() {
      return new container(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "build_id" field.</summary>
    public const int BuildIdFieldNumber = 2;
    private int buildId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BuildId {
      get { if ((_hasBits0 & 1) != 0) { return buildId_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        buildId_ = value;
      }
    }
    /// <summary>Gets whether the "build_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBuildId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "build_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBuildId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "infos" field.</summary>
    public const int InfosFieldNumber = 3;
    private static readonly pbc::MapField<int, global::BulletConfig.bullet_data>.Codec _map_infos_codec
        = new pbc::MapField<int, global::BulletConfig.bullet_data>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::BulletConfig.bullet_data.Parser), 26);
    private readonly pbc::MapField<int, global::BulletConfig.bullet_data> infos_ = new pbc::MapField<int, global::BulletConfig.bullet_data>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, global::BulletConfig.bullet_data> Infos {
      get { return infos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as container);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(container other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (BuildId != other.BuildId) return false;
      if (!Infos.Equals(other.Infos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasBuildId) hash ^= BuildId.GetHashCode();
      hash ^= Infos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasBuildId) {
        output.WriteRawTag(16);
        output.WriteInt32(BuildId);
      }
      infos_.WriteTo(output, _map_infos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasBuildId) {
        output.WriteRawTag(16);
        output.WriteInt32(BuildId);
      }
      infos_.WriteTo(ref output, _map_infos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasBuildId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildId);
      }
      size += infos_.CalculateSize(_map_infos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(container other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasBuildId) {
        BuildId = other.BuildId;
      }
      infos_.Add(other.infos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            BuildId = input.ReadInt32();
            break;
          }
          case 26: {
            infos_.AddEntriesFrom(input, _map_infos_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            BuildId = input.ReadInt32();
            break;
          }
          case 26: {
            infos_.AddEntriesFrom(ref input, _map_infos_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
