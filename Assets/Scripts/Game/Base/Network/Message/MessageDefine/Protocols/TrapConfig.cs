// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: trap_config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TrapConfig {

  /// <summary>Holder for reflection information generated from trap_config.proto</summary>
  public static partial class TrapConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for trap_config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TrapConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChF0cmFwX2NvbmZpZy5wcm90bxILdHJhcF9jb25maWcaFXNraWxsbmV3X2Nv",
            "bmZpZy5wcm90byKEAQoQdHJhcF9yYW5kb21fZGF0YRIqCgVTaGFwZRgBIAEo",
            "DjIWLnRyYXBfY29uZmlnLkVTaGFwVHlwZUgAiAEBEhIKBVJhbmdlGAIgASgF",
            "SAGIAQESEgoFU3BhY2UYAyABKAVIAogBAUIICgZfU2hhcGVCCAoGX1Jhbmdl",
            "QggKBl9TcGFjZSKWBwoJdHJhcF9kYXRhEg8KAklkGAEgASgNSACIAQESNwoJ",
            "RXZlbnRQaWNrGAIgASgLMh8uc2tpbGxuZXdfY29uZmlnLmV2ZW50cGlja19k",
            "YXRhSAGIAQESEQoETmFtZRgDIAEoCUgCiAEBEjAKC1RyYXBPdXRwdXRzGAQg",
            "AygLMhsuc2tpbGxuZXdfY29uZmlnLk91dHB1dEl0ZW0SGAoLU3VwZXJBdHRh",
            "Y2sYBSABKAVIA4gBARIZCgxEZWxheVNldFRpbWUYBiABKAVIBIgBARIVCghU",
            "cmFwTGlmZRgHIAEoBUgFiAEBEhUKCFRyYXBSYXRlGAggASgFSAaIAQESHAoP",
            "VHJhcFN0YXJ0RWZmZWN0GAkgASgNSAeIAQESGwoOVHJhcExvb3BFZmZlY3QY",
            "CiABKA1ICIgBARIaCg1UcmFwRW5kRWZmZWN0GAsgASgNSAmIAQESHwoSVHJh",
            "cEludGVydmFsRWZmZWN0GAwgASgNSAqIAQESHwoSRm9sbG93T3JpZ2luRW50",
            "aXR5GA0gASgISAuIAQESOAoNVHJhcEVuZEV2ZW50cxgOIAMoDjIhLnNraWxs",
            "bmV3X2NvbmZpZy5FRW50aXR5R2FtZUV2ZW50EjAKDFRyYXBFbmRUeXBlcxgP",
            "IAMoDjIaLnNraWxsbmV3X2NvbmZpZy5FT3ZlclR5cGUSQgoWVHJhcEJlVHJp",
            "Z2dlckNvbmRpdGlvbhgQIAEoDjIdLnRyYXBfY29uZmlnLkVUcmFwVHJpZ2dl",
            "clR5cGVIDIgBARIZCgxGb3JjZU9uRmxvb3IYESABKAhIDYgBARI3CgtSYW5k",
            "b21SYW5nZRgSIAEoCzIdLnRyYXBfY29uZmlnLnRyYXBfcmFuZG9tX2RhdGFI",
            "DogBAUIFCgNfSWRCDAoKX0V2ZW50UGlja0IHCgVfTmFtZUIOCgxfU3VwZXJB",
            "dHRhY2tCDwoNX0RlbGF5U2V0VGltZUILCglfVHJhcExpZmVCCwoJX1RyYXBS",
            "YXRlQhIKEF9UcmFwU3RhcnRFZmZlY3RCEQoPX1RyYXBMb29wRWZmZWN0QhAK",
            "Dl9UcmFwRW5kRWZmZWN0QhUKE19UcmFwSW50ZXJ2YWxFZmZlY3RCFQoTX0Zv",
            "bGxvd09yaWdpbkVudGl0eUIZChdfVHJhcEJlVHJpZ2dlckNvbmRpdGlvbkIP",
            "Cg1fRm9yY2VPbkZsb29yQg4KDF9SYW5kb21SYW5nZSLDAQoJY29udGFpbmVy",
            "EhEKBG5hbWUYASABKAlIAIgBARIVCghidWlsZF9pZBgCIAEoBUgBiAEBEjAK",
            "BWluZm9zGAMgAygLMiEudHJhcF9jb25maWcuY29udGFpbmVyLkluZm9zRW50",
            "cnkaRAoKSW5mb3NFbnRyeRILCgNrZXkYASABKAUSJQoFdmFsdWUYAiABKAsy",
            "Fi50cmFwX2NvbmZpZy50cmFwX2RhdGE6AjgBQgcKBV9uYW1lQgsKCV9idWls",
            "ZF9pZCpICglFU2hhcFR5cGUSEgoORVNoYXBUeXBlX05vbmUQABIUChBFU2hh",
            "cFR5cGVfQ2lyY2xlEAESEQoNRVNoYXBUeXBlX01hcBACKmsKDkVDZW50ZXJQ",
            "b3NUeXBlEhkKFUVDZW50ZXJQb3NUeXBlX1NldFBvcxAAEh8KG0VDZW50ZXJQ",
            "b3NUeXBlX1NraWxsQ21kX1BvcxABEh0KGUVDZW50ZXJQb3NUeXBlX1RyaWdn",
            "ZXJQb3MQAipRChBFVHJhcFRyaWdnZXJUeXBlEhkKFUVUcmFwVHJpZ2dlclR5",
            "cGVfTm9uZRAAEiIKHkVUcmFwVHJpZ2dlclR5cGVfVGFyZ2V0SW5SYW5nZRAB",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SkillnewConfig.SkillnewConfigReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::TrapConfig.EShapType), typeof(global::TrapConfig.ECenterPosType), typeof(global::TrapConfig.ETrapTriggerType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TrapConfig.trap_random_data), global::TrapConfig.trap_random_data.Parser, new[]{ "Shape", "Range", "Space" }, new[]{ "Shape", "Range", "Space" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrapConfig.trap_data), global::TrapConfig.trap_data.Parser, new[]{ "Id", "EventPick", "Name", "TrapOutputs", "SuperAttack", "DelaySetTime", "TrapLife", "TrapRate", "TrapStartEffect", "TrapLoopEffect", "TrapEndEffect", "TrapIntervalEffect", "FollowOriginEntity", "TrapEndEvents", "TrapEndTypes", "TrapBeTriggerCondition", "ForceOnFloor", "RandomRange" }, new[]{ "Id", "EventPick", "Name", "SuperAttack", "DelaySetTime", "TrapLife", "TrapRate", "TrapStartEffect", "TrapLoopEffect", "TrapEndEffect", "TrapIntervalEffect", "FollowOriginEntity", "TrapBeTriggerCondition", "ForceOnFloor", "RandomRange" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrapConfig.container), global::TrapConfig.container.Parser, new[]{ "Name", "BuildId", "Infos" }, new[]{ "Name", "BuildId" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Enums
  public enum EShapType {
    [pbr::OriginalName("EShapType_None")] None = 0,
    /// <summary>
    ///圆形
    /// </summary>
    [pbr::OriginalName("EShapType_Circle")] Circle = 1,
    /// <summary>
    ///全地图
    /// </summary>
    [pbr::OriginalName("EShapType_Map")] Map = 2,
  }

  public enum ECenterPosType {
    /// <summary>
    ///设置的坐标
    /// </summary>
    [pbr::OriginalName("ECenterPosType_SetPos")] SetPos = 0,
    /// <summary>
    ///玩家选择的坐标
    /// </summary>
    [pbr::OriginalName("ECenterPosType_SkillCmd_Pos")] SkillCmdPos = 1,
    /// <summary>
    ///触发的坐标
    /// </summary>
    [pbr::OriginalName("ECenterPosType_TriggerPos")] TriggerPos = 2,
  }

  public enum ETrapTriggerType {
    /// <summary>
    /// </summary>
    [pbr::OriginalName("ETrapTriggerType_None")] None = 0,
    /// <summary>
    ///范围内有目标
    /// </summary>
    [pbr::OriginalName("ETrapTriggerType_TargetInRange")] TargetInRange = 1,
  }

  #endregion

  #region Messages
  public sealed partial class trap_random_data : pb::IMessage<trap_random_data>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<trap_random_data> _parser = new pb::MessageParser<trap_random_data>(() => new trap_random_data());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<trap_random_data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrapConfig.TrapConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public trap_random_data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public trap_random_data(trap_random_data other) : this() {
      _hasBits0 = other._hasBits0;
      shape_ = other.shape_;
      range_ = other.range_;
      space_ = other.space_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public trap_random_data Clone() {
      return new trap_random_data(this);
    }

    /// <summary>Field number for the "Shape" field.</summary>
    public const int ShapeFieldNumber = 1;
    private global::TrapConfig.EShapType shape_;
    /// <summary>
    ///形状
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TrapConfig.EShapType Shape {
      get { if ((_hasBits0 & 1) != 0) { return shape_; } else { return global::TrapConfig.EShapType.None; } }
      set {
        _hasBits0 |= 1;
        shape_ = value;
      }
    }
    /// <summary>Gets whether the "Shape" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShape {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "Shape" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShape() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "Range" field.</summary>
    public const int RangeFieldNumber = 2;
    private int range_;
    /// <summary>
    ///圆半径
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Range {
      get { if ((_hasBits0 & 2) != 0) { return range_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        range_ = value;
      }
    }
    /// <summary>Gets whether the "Range" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRange {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "Range" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRange() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "Space" field.</summary>
    public const int SpaceFieldNumber = 3;
    private int space_;
    /// <summary>
    ///间隔
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Space {
      get { if ((_hasBits0 & 4) != 0) { return space_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        space_ = value;
      }
    }
    /// <summary>Gets whether the "Space" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpace {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "Space" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpace() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as trap_random_data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(trap_random_data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Shape != other.Shape) return false;
      if (Range != other.Range) return false;
      if (Space != other.Space) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasShape) hash ^= Shape.GetHashCode();
      if (HasRange) hash ^= Range.GetHashCode();
      if (HasSpace) hash ^= Space.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasShape) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Shape);
      }
      if (HasRange) {
        output.WriteRawTag(16);
        output.WriteInt32(Range);
      }
      if (HasSpace) {
        output.WriteRawTag(24);
        output.WriteInt32(Space);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasShape) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Shape);
      }
      if (HasRange) {
        output.WriteRawTag(16);
        output.WriteInt32(Range);
      }
      if (HasSpace) {
        output.WriteRawTag(24);
        output.WriteInt32(Space);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasShape) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Shape);
      }
      if (HasRange) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Range);
      }
      if (HasSpace) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Space);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(trap_random_data other) {
      if (other == null) {
        return;
      }
      if (other.HasShape) {
        Shape = other.Shape;
      }
      if (other.HasRange) {
        Range = other.Range;
      }
      if (other.HasSpace) {
        Space = other.Space;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Shape = (global::TrapConfig.EShapType) input.ReadEnum();
            break;
          }
          case 16: {
            Range = input.ReadInt32();
            break;
          }
          case 24: {
            Space = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Shape = (global::TrapConfig.EShapType) input.ReadEnum();
            break;
          }
          case 16: {
            Range = input.ReadInt32();
            break;
          }
          case 24: {
            Space = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class trap_data : pb::IMessage<trap_data>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<trap_data> _parser = new pb::MessageParser<trap_data>(() => new trap_data());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<trap_data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrapConfig.TrapConfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public trap_data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public trap_data(trap_data other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      eventPick_ = other.eventPick_ != null ? other.eventPick_.Clone() : null;
      name_ = other.name_;
      trapOutputs_ = other.trapOutputs_.Clone();
      superAttack_ = other.superAttack_;
      delaySetTime_ = other.delaySetTime_;
      trapLife_ = other.trapLife_;
      trapRate_ = other.trapRate_;
      trapStartEffect_ = other.trapStartEffect_;
      trapLoopEffect_ = other.trapLoopEffect_;
      trapEndEffect_ = other.trapEndEffect_;
      trapIntervalEffect_ = other.trapIntervalEffect_;
      followOriginEntity_ = other.followOriginEntity_;
      trapEndEvents_ = other.trapEndEvents_.Clone();
      trapEndTypes_ = other.trapEndTypes_.Clone();
      trapBeTriggerCondition_ = other.trapBeTriggerCondition_;
      forceOnFloor_ = other.forceOnFloor_;
      randomRange_ = other.randomRange_ != null ? other.randomRange_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public trap_data Clone() {
      return new trap_data(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "Id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "Id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "EventPick" field.</summary>
    public const int EventPickFieldNumber = 2;
    private global::SkillnewConfig.eventpick_data eventPick_;
    /// <summary>
    ///eventpick
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SkillnewConfig.eventpick_data EventPick {
      get { return eventPick_; }
      set {
        eventPick_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_;
    /// <summary>
    ///名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "Name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "Name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "TrapOutputs" field.</summary>
    public const int TrapOutputsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::SkillnewConfig.OutputItem> _repeated_trapOutputs_codec
        = pb::FieldCodec.ForMessage(34, global::SkillnewConfig.OutputItem.Parser);
    private readonly pbc::RepeatedField<global::SkillnewConfig.OutputItem> trapOutputs_ = new pbc::RepeatedField<global::SkillnewConfig.OutputItem>();
    /// <summary>
    ///输出
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SkillnewConfig.OutputItem> TrapOutputs {
      get { return trapOutputs_; }
    }

    /// <summary>Field number for the "SuperAttack" field.</summary>
    public const int SuperAttackFieldNumber = 5;
    private int superAttack_;
    /// <summary>
    ///超级盔甲值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperAttack {
      get { if ((_hasBits0 & 2) != 0) { return superAttack_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        superAttack_ = value;
      }
    }
    /// <summary>Gets whether the "SuperAttack" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperAttack {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "SuperAttack" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperAttack() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "DelaySetTime" field.</summary>
    public const int DelaySetTimeFieldNumber = 6;
    private int delaySetTime_;
    /// <summary>
    ///固定时间点触发
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DelaySetTime {
      get { if ((_hasBits0 & 4) != 0) { return delaySetTime_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        delaySetTime_ = value;
      }
    }
    /// <summary>Gets whether the "DelaySetTime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDelaySetTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "DelaySetTime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDelaySetTime() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "TrapLife" field.</summary>
    public const int TrapLifeFieldNumber = 7;
    private int trapLife_;
    /// <summary>
    ///时长
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TrapLife {
      get { if ((_hasBits0 & 8) != 0) { return trapLife_; } else { return 0; } }
      set {
        _hasBits0 |= 8;
        trapLife_ = value;
      }
    }
    /// <summary>Gets whether the "TrapLife" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrapLife {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "TrapLife" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrapLife() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "TrapRate" field.</summary>
    public const int TrapRateFieldNumber = 8;
    private int trapRate_;
    /// <summary>
    ///触发几率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TrapRate {
      get { if ((_hasBits0 & 16) != 0) { return trapRate_; } else { return 0; } }
      set {
        _hasBits0 |= 16;
        trapRate_ = value;
      }
    }
    /// <summary>Gets whether the "TrapRate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrapRate {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "TrapRate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrapRate() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "TrapStartEffect" field.</summary>
    public const int TrapStartEffectFieldNumber = 9;
    private uint trapStartEffect_;
    /// <summary>
    ///初始特效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TrapStartEffect {
      get { if ((_hasBits0 & 32) != 0) { return trapStartEffect_; } else { return 0; } }
      set {
        _hasBits0 |= 32;
        trapStartEffect_ = value;
      }
    }
    /// <summary>Gets whether the "TrapStartEffect" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrapStartEffect {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "TrapStartEffect" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrapStartEffect() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "TrapLoopEffect" field.</summary>
    public const int TrapLoopEffectFieldNumber = 10;
    private uint trapLoopEffect_;
    /// <summary>
    ///循环特效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TrapLoopEffect {
      get { if ((_hasBits0 & 64) != 0) { return trapLoopEffect_; } else { return 0; } }
      set {
        _hasBits0 |= 64;
        trapLoopEffect_ = value;
      }
    }
    /// <summary>Gets whether the "TrapLoopEffect" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrapLoopEffect {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "TrapLoopEffect" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrapLoopEffect() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "TrapEndEffect" field.</summary>
    public const int TrapEndEffectFieldNumber = 11;
    private uint trapEndEffect_;
    /// <summary>
    ///结束特效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TrapEndEffect {
      get { if ((_hasBits0 & 128) != 0) { return trapEndEffect_; } else { return 0; } }
      set {
        _hasBits0 |= 128;
        trapEndEffect_ = value;
      }
    }
    /// <summary>Gets whether the "TrapEndEffect" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrapEndEffect {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "TrapEndEffect" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrapEndEffect() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "TrapIntervalEffect" field.</summary>
    public const int TrapIntervalEffectFieldNumber = 12;
    private uint trapIntervalEffect_;
    /// <summary>
    ///触发时显示特效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TrapIntervalEffect {
      get { if ((_hasBits0 & 256) != 0) { return trapIntervalEffect_; } else { return 0; } }
      set {
        _hasBits0 |= 256;
        trapIntervalEffect_ = value;
      }
    }
    /// <summary>Gets whether the "TrapIntervalEffect" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrapIntervalEffect {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "TrapIntervalEffect" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrapIntervalEffect() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "FollowOriginEntity" field.</summary>
    public const int FollowOriginEntityFieldNumber = 13;
    private bool followOriginEntity_;
    /// <summary>
    ///跟随来源者移动
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FollowOriginEntity {
      get { if ((_hasBits0 & 512) != 0) { return followOriginEntity_; } else { return false; } }
      set {
        _hasBits0 |= 512;
        followOriginEntity_ = value;
      }
    }
    /// <summary>Gets whether the "FollowOriginEntity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFollowOriginEntity {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "FollowOriginEntity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFollowOriginEntity() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "TrapEndEvents" field.</summary>
    public const int TrapEndEventsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::SkillnewConfig.EEntityGameEvent> _repeated_trapEndEvents_codec
        = pb::FieldCodec.ForEnum(114, x => (int) x, x => (global::SkillnewConfig.EEntityGameEvent) x);
    private readonly pbc::RepeatedField<global::SkillnewConfig.EEntityGameEvent> trapEndEvents_ = new pbc::RepeatedField<global::SkillnewConfig.EEntityGameEvent>();
    /// <summary>
    ///结束触发的事件类型列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SkillnewConfig.EEntityGameEvent> TrapEndEvents {
      get { return trapEndEvents_; }
    }

    /// <summary>Field number for the "TrapEndTypes" field.</summary>
    public const int TrapEndTypesFieldNumber = 15;
    private static readonly pb::FieldCodec<global::SkillnewConfig.EOverType> _repeated_trapEndTypes_codec
        = pb::FieldCodec.ForEnum(122, x => (int) x, x => (global::SkillnewConfig.EOverType) x);
    private readonly pbc::RepeatedField<global::SkillnewConfig.EOverType> trapEndTypes_ = new pbc::RepeatedField<global::SkillnewConfig.EOverType>();
    /// <summary>
    ///结束类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SkillnewConfig.EOverType> TrapEndTypes {
      get { return trapEndTypes_; }
    }

    /// <summary>Field number for the "TrapBeTriggerCondition" field.</summary>
    public const int TrapBeTriggerConditionFieldNumber = 16;
    private global::TrapConfig.ETrapTriggerType trapBeTriggerCondition_;
    /// <summary>
    ///触发调节
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TrapConfig.ETrapTriggerType TrapBeTriggerCondition {
      get { if ((_hasBits0 & 1024) != 0) { return trapBeTriggerCondition_; } else { return global::TrapConfig.ETrapTriggerType.None; } }
      set {
        _hasBits0 |= 1024;
        trapBeTriggerCondition_ = value;
      }
    }
    /// <summary>Gets whether the "TrapBeTriggerCondition" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTrapBeTriggerCondition {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "TrapBeTriggerCondition" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrapBeTriggerCondition() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "ForceOnFloor" field.</summary>
    public const int ForceOnFloorFieldNumber = 17;
    private bool forceOnFloor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForceOnFloor {
      get { if ((_hasBits0 & 2048) != 0) { return forceOnFloor_; } else { return false; } }
      set {
        _hasBits0 |= 2048;
        forceOnFloor_ = value;
      }
    }
    /// <summary>Gets whether the "ForceOnFloor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForceOnFloor {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "ForceOnFloor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForceOnFloor() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "RandomRange" field.</summary>
    public const int RandomRangeFieldNumber = 18;
    private global::TrapConfig.trap_random_data randomRange_;
    /// <summary>
    ///随机范围
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TrapConfig.trap_random_data RandomRange {
      get { return randomRange_; }
      set {
        randomRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as trap_data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(trap_data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(EventPick, other.EventPick)) return false;
      if (Name != other.Name) return false;
      if(!trapOutputs_.Equals(other.trapOutputs_)) return false;
      if (SuperAttack != other.SuperAttack) return false;
      if (DelaySetTime != other.DelaySetTime) return false;
      if (TrapLife != other.TrapLife) return false;
      if (TrapRate != other.TrapRate) return false;
      if (TrapStartEffect != other.TrapStartEffect) return false;
      if (TrapLoopEffect != other.TrapLoopEffect) return false;
      if (TrapEndEffect != other.TrapEndEffect) return false;
      if (TrapIntervalEffect != other.TrapIntervalEffect) return false;
      if (FollowOriginEntity != other.FollowOriginEntity) return false;
      if(!trapEndEvents_.Equals(other.trapEndEvents_)) return false;
      if(!trapEndTypes_.Equals(other.trapEndTypes_)) return false;
      if (TrapBeTriggerCondition != other.TrapBeTriggerCondition) return false;
      if (ForceOnFloor != other.ForceOnFloor) return false;
      if (!object.Equals(RandomRange, other.RandomRange)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (eventPick_ != null) hash ^= EventPick.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      hash ^= trapOutputs_.GetHashCode();
      if (HasSuperAttack) hash ^= SuperAttack.GetHashCode();
      if (HasDelaySetTime) hash ^= DelaySetTime.GetHashCode();
      if (HasTrapLife) hash ^= TrapLife.GetHashCode();
      if (HasTrapRate) hash ^= TrapRate.GetHashCode();
      if (HasTrapStartEffect) hash ^= TrapStartEffect.GetHashCode();
      if (HasTrapLoopEffect) hash ^= TrapLoopEffect.GetHashCode();
      if (HasTrapEndEffect) hash ^= TrapEndEffect.GetHashCode();
      if (HasTrapIntervalEffect) hash ^= TrapIntervalEffect.GetHashCode();
      if (HasFollowOriginEntity) hash ^= FollowOriginEntity.GetHashCode();
      hash ^= trapEndEvents_.GetHashCode();
      hash ^= trapEndTypes_.GetHashCode();
      if (HasTrapBeTriggerCondition) hash ^= TrapBeTriggerCondition.GetHashCode();
      if (HasForceOnFloor) hash ^= ForceOnFloor.GetHashCode();
      if (randomRange_ != null) hash ^= RandomRange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (eventPick_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EventPick);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      trapOutputs_.WriteTo(output, _repeated_trapOutputs_codec);
      if (HasSuperAttack) {
        output.WriteRawTag(40);
        output.WriteInt32(SuperAttack);
      }
      if (HasDelaySetTime) {
        output.WriteRawTag(48);
        output.WriteInt32(DelaySetTime);
      }
      if (HasTrapLife) {
        output.WriteRawTag(56);
        output.WriteInt32(TrapLife);
      }
      if (HasTrapRate) {
        output.WriteRawTag(64);
        output.WriteInt32(TrapRate);
      }
      if (HasTrapStartEffect) {
        output.WriteRawTag(72);
        output.WriteUInt32(TrapStartEffect);
      }
      if (HasTrapLoopEffect) {
        output.WriteRawTag(80);
        output.WriteUInt32(TrapLoopEffect);
      }
      if (HasTrapEndEffect) {
        output.WriteRawTag(88);
        output.WriteUInt32(TrapEndEffect);
      }
      if (HasTrapIntervalEffect) {
        output.WriteRawTag(96);
        output.WriteUInt32(TrapIntervalEffect);
      }
      if (HasFollowOriginEntity) {
        output.WriteRawTag(104);
        output.WriteBool(FollowOriginEntity);
      }
      trapEndEvents_.WriteTo(output, _repeated_trapEndEvents_codec);
      trapEndTypes_.WriteTo(output, _repeated_trapEndTypes_codec);
      if (HasTrapBeTriggerCondition) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) TrapBeTriggerCondition);
      }
      if (HasForceOnFloor) {
        output.WriteRawTag(136, 1);
        output.WriteBool(ForceOnFloor);
      }
      if (randomRange_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(RandomRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (eventPick_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EventPick);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      trapOutputs_.WriteTo(ref output, _repeated_trapOutputs_codec);
      if (HasSuperAttack) {
        output.WriteRawTag(40);
        output.WriteInt32(SuperAttack);
      }
      if (HasDelaySetTime) {
        output.WriteRawTag(48);
        output.WriteInt32(DelaySetTime);
      }
      if (HasTrapLife) {
        output.WriteRawTag(56);
        output.WriteInt32(TrapLife);
      }
      if (HasTrapRate) {
        output.WriteRawTag(64);
        output.WriteInt32(TrapRate);
      }
      if (HasTrapStartEffect) {
        output.WriteRawTag(72);
        output.WriteUInt32(TrapStartEffect);
      }
      if (HasTrapLoopEffect) {
        output.WriteRawTag(80);
        output.WriteUInt32(TrapLoopEffect);
      }
      if (HasTrapEndEffect) {
        output.WriteRawTag(88);
        output.WriteUInt32(TrapEndEffect);
      }
      if (HasTrapIntervalEffect) {
        output.WriteRawTag(96);
        output.WriteUInt32(TrapIntervalEffect);
      }
      if (HasFollowOriginEntity) {
        output.WriteRawTag(104);
        output.WriteBool(FollowOriginEntity);
      }
      trapEndEvents_.WriteTo(ref output, _repeated_trapEndEvents_codec);
      trapEndTypes_.WriteTo(ref output, _repeated_trapEndTypes_codec);
      if (HasTrapBeTriggerCondition) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) TrapBeTriggerCondition);
      }
      if (HasForceOnFloor) {
        output.WriteRawTag(136, 1);
        output.WriteBool(ForceOnFloor);
      }
      if (randomRange_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(RandomRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (eventPick_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventPick);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += trapOutputs_.CalculateSize(_repeated_trapOutputs_codec);
      if (HasSuperAttack) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperAttack);
      }
      if (HasDelaySetTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DelaySetTime);
      }
      if (HasTrapLife) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrapLife);
      }
      if (HasTrapRate) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrapRate);
      }
      if (HasTrapStartEffect) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TrapStartEffect);
      }
      if (HasTrapLoopEffect) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TrapLoopEffect);
      }
      if (HasTrapEndEffect) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TrapEndEffect);
      }
      if (HasTrapIntervalEffect) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TrapIntervalEffect);
      }
      if (HasFollowOriginEntity) {
        size += 1 + 1;
      }
      size += trapEndEvents_.CalculateSize(_repeated_trapEndEvents_codec);
      size += trapEndTypes_.CalculateSize(_repeated_trapEndTypes_codec);
      if (HasTrapBeTriggerCondition) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) TrapBeTriggerCondition);
      }
      if (HasForceOnFloor) {
        size += 2 + 1;
      }
      if (randomRange_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RandomRange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(trap_data other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.eventPick_ != null) {
        if (eventPick_ == null) {
          EventPick = new global::SkillnewConfig.eventpick_data();
        }
        EventPick.MergeFrom(other.EventPick);
      }
      if (other.HasName) {
        Name = other.Name;
      }
      trapOutputs_.Add(other.trapOutputs_);
      if (other.HasSuperAttack) {
        SuperAttack = other.SuperAttack;
      }
      if (other.HasDelaySetTime) {
        DelaySetTime = other.DelaySetTime;
      }
      if (other.HasTrapLife) {
        TrapLife = other.TrapLife;
      }
      if (other.HasTrapRate) {
        TrapRate = other.TrapRate;
      }
      if (other.HasTrapStartEffect) {
        TrapStartEffect = other.TrapStartEffect;
      }
      if (other.HasTrapLoopEffect) {
        TrapLoopEffect = other.TrapLoopEffect;
      }
      if (other.HasTrapEndEffect) {
        TrapEndEffect = other.TrapEndEffect;
      }
      if (other.HasTrapIntervalEffect) {
        TrapIntervalEffect = other.TrapIntervalEffect;
      }
      if (other.HasFollowOriginEntity) {
        FollowOriginEntity = other.FollowOriginEntity;
      }
      trapEndEvents_.Add(other.trapEndEvents_);
      trapEndTypes_.Add(other.trapEndTypes_);
      if (other.HasTrapBeTriggerCondition) {
        TrapBeTriggerCondition = other.TrapBeTriggerCondition;
      }
      if (other.HasForceOnFloor) {
        ForceOnFloor = other.ForceOnFloor;
      }
      if (other.randomRange_ != null) {
        if (randomRange_ == null) {
          RandomRange = new global::TrapConfig.trap_random_data();
        }
        RandomRange.MergeFrom(other.RandomRange);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            if (eventPick_ == null) {
              EventPick = new global::SkillnewConfig.eventpick_data();
            }
            input.ReadMessage(EventPick);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            trapOutputs_.AddEntriesFrom(input, _repeated_trapOutputs_codec);
            break;
          }
          case 40: {
            SuperAttack = input.ReadInt32();
            break;
          }
          case 48: {
            DelaySetTime = input.ReadInt32();
            break;
          }
          case 56: {
            TrapLife = input.ReadInt32();
            break;
          }
          case 64: {
            TrapRate = input.ReadInt32();
            break;
          }
          case 72: {
            TrapStartEffect = input.ReadUInt32();
            break;
          }
          case 80: {
            TrapLoopEffect = input.ReadUInt32();
            break;
          }
          case 88: {
            TrapEndEffect = input.ReadUInt32();
            break;
          }
          case 96: {
            TrapIntervalEffect = input.ReadUInt32();
            break;
          }
          case 104: {
            FollowOriginEntity = input.ReadBool();
            break;
          }
          case 114:
          case 112: {
            trapEndEvents_.AddEntriesFrom(input, _repeated_trapEndEvents_codec);
            break;
          }
          case 122:
          case 120: {
            trapEndTypes_.AddEntriesFrom(input, _repeated_trapEndTypes_codec);
            break;
          }
          case 128: {
            TrapBeTriggerCondition = (global::TrapConfig.ETrapTriggerType) input.ReadEnum();
            break;
          }
          case 136: {
            ForceOnFloor = input.ReadBool();
            break;
          }
          case 146: {
            if (randomRange_ == null) {
              RandomRange = new global::TrapConfig.trap_random_data();
            }
            input.ReadMessage(RandomRange);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            if (eventPick_ == null) {
              EventPick = new global::SkillnewConfig.eventpick_data();
            }
            input.ReadMessage(EventPick);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            trapOutputs_.AddEntriesFrom(ref input, _repeated_trapOutputs_codec);
            break;
          }
          case 40: {
            SuperAttack = input.ReadInt32();
            break;
          }
          case 48: {
            DelaySetTime = input.ReadInt32();
            break;
          }
          case 56: {
            TrapLife = input.ReadInt32();
            break;
          }
          case 64: {
            TrapRate = input.ReadInt32();
            break;
          }
          case 72: {
            TrapStartEffect = input.ReadUInt32();
            break;
          }
          case 80: {
            TrapLoopEffect = input.ReadUInt32();
            break;
          }
          case 88: {
            TrapEndEffect = input.ReadUInt32();
            break;
          }
          case 96: {
            TrapIntervalEffect = input.ReadUInt32();
            break;
          }
          case 104: {
            FollowOriginEntity = input.ReadBool();
            break;
          }
          case 114:
          case 112: {
            trapEndEvents_.AddEntriesFrom(ref input, _repeated_trapEndEvents_codec);
            break;
          }
          case 122:
          case 120: {
            trapEndTypes_.AddEntriesFrom(ref input, _repeated_trapEndTypes_codec);
            break;
          }
          case 128: {
            TrapBeTriggerCondition = (global::TrapConfig.ETrapTriggerType) input.ReadEnum();
            break;
          }
          case 136: {
            ForceOnFloor = input.ReadBool();
            break;
          }
          case 146: {
            if (randomRange_ == null) {
              RandomRange = new global::TrapConfig.trap_random_data();
            }
            input.ReadMessage(RandomRange);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class container : pb::IMessage<container>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<container> _parser = new pb::MessageParser<container>(() => new container());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<container> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrapConfig.TrapConfigReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public container() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public container(container other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      buildId_ = other.buildId_;
      infos_ = other.infos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public container Clone() {
      return new container(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "build_id" field.</summary>
    public const int BuildIdFieldNumber = 2;
    private int buildId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BuildId {
      get { if ((_hasBits0 & 1) != 0) { return buildId_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        buildId_ = value;
      }
    }
    /// <summary>Gets whether the "build_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBuildId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "build_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBuildId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "infos" field.</summary>
    public const int InfosFieldNumber = 3;
    private static readonly pbc::MapField<int, global::TrapConfig.trap_data>.Codec _map_infos_codec
        = new pbc::MapField<int, global::TrapConfig.trap_data>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::TrapConfig.trap_data.Parser), 26);
    private readonly pbc::MapField<int, global::TrapConfig.trap_data> infos_ = new pbc::MapField<int, global::TrapConfig.trap_data>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, global::TrapConfig.trap_data> Infos {
      get { return infos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as container);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(container other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (BuildId != other.BuildId) return false;
      if (!Infos.Equals(other.Infos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasBuildId) hash ^= BuildId.GetHashCode();
      hash ^= Infos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasBuildId) {
        output.WriteRawTag(16);
        output.WriteInt32(BuildId);
      }
      infos_.WriteTo(output, _map_infos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasBuildId) {
        output.WriteRawTag(16);
        output.WriteInt32(BuildId);
      }
      infos_.WriteTo(ref output, _map_infos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasBuildId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildId);
      }
      size += infos_.CalculateSize(_map_infos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(container other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasBuildId) {
        BuildId = other.BuildId;
      }
      infos_.Add(other.infos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            BuildId = input.ReadInt32();
            break;
          }
          case 26: {
            infos_.AddEntriesFrom(input, _map_infos_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            BuildId = input.ReadInt32();
            break;
          }
          case 26: {
            infos_.AddEntriesFrom(ref input, _map_infos_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
